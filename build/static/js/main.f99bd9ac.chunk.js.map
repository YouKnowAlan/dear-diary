{"version":3,"sources":["component/layout/Navbar.js","component/layout/Note.js","store/action/noteAction.js","component/layout/Noteslist.js","customhook/useInput.js","images/post-it.png","component/home/Form.js","images/down.png","component/home/Home.js","images/star.svg","component/layout/Favorite.js","component/layout/NoteDetail.js","component/layout/EditForm.js","App.js","reportWebVitals.js","store/reducer/noteReducer.js","store/reducer/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["NavigationBar","Navbar","className","to","Nav","Note","note","dayjs","relativeTime","dispatch","useDispatch","favoriteMarkup","favorite","Card","Body","onClick","favStatus","getState","getFirestore","collection","doc","id","update","then","console","log","catch","err","favoriteNote","delete","deleteNote","Title","title","Text","content","createdAt","toDate","fromNow","type","payload","Noteslist","notes","map","useInput","initialValue","useState","value","setValue","resetValue","bind","onChange","e","target","FormSection","bindTitle","resetTitle","bindContent","resetContent","isClicked","setIsClicked","buttonClassSubmit","setButtonClassSubmit","useEffect","timeout","setTimeout","clearTimeout","Form","onSubmit","preventDefault","add","Date","src","stickerNotes","FormGroup","controlId","FormControl","placeholder","as","rows","Home","useFirestoreConnect","orderBy","useSelector","state","firestore","ordered","text","setText","setId","suggestions","setSuggestions","Row","Col","lg","downFingerImg","inline","matches","length","filter","regex","RegExp","match","onChangeHandler","Button","variant","suggestion","onSuggestHandler","Favorite","where","storeAs","favNotes","favnotes","star","NoteDetail","props","calendar","params","data","isLoaded","isEmpty","Footer","EditForm","history","useHistory","editNote","push","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","note_to_edit","rootReducer","combineReducers","firebase","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","fbconfig","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f99bd9ac.chunk.js","sourcesContent":["import { Nav, Navbar } from 'react-bootstrap';\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst NavigationBar = () => {\r\n    return (\r\n        <Navbar className=\"d-flex justify-content-between align-items-center nav-bg\">\r\n            <Link to=\"/\" className=\"brand\">Dear Diary</Link>\r\n            <Nav>\r\n                <NavLink to=\"/favorite\" className=\"custom-button\">Favorites</NavLink>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavigationBar;\r\n\r\n","import { Card } from 'react-bootstrap';\r\nimport { FaRegHeart, FaHeart, FaTrashAlt, FaPen } from 'react-icons/fa';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {deleteNote} from '../../store/action/noteAction';\r\nimport {favoriteNote} from '../../store/action/noteAction';\r\n\r\n// style\r\nimport '../../styles/note.scss';\r\n\r\nimport * as dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\nconst Note = ({ note }) => {\r\n    dayjs.extend(relativeTime);\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const deleteNoteFunc = () => {\r\n        dispatch(deleteNote(note));\r\n    }\r\n\r\n    const addToFavorite = () => {\r\n        dispatch(favoriteNote(note));\r\n    }\r\n\r\n    const editNoteFunc = () => {\r\n        dispatch({type: 'EDIT_NOTE', payload: note})\r\n    }\r\n\r\n    const favoriteMarkup = note.favorite ? <FaHeart /> : <FaRegHeart />\r\n\r\n    return (\r\n        <Card className=\"cardNote\">\r\n            <Card.Body>\r\n                <div className=\"favorite-remove-icon\">\r\n                    <div className=\"favorite-icon\" onClick={addToFavorite}>\r\n                        {favoriteMarkup}\r\n                    </div>\r\n                    \r\n                    <FaTrashAlt className=\"remove-icon\" onClick={deleteNoteFunc}/>\r\n                </div>\r\n                <Link to={\"/note/\" + note.id}><Card.Title>{note.title}</Card.Title></Link>\r\n                <Card.Text>{note.content}</Card.Text>\r\n                <Card.Text className=\"text-muted\">{dayjs(note.createdAt.toDate()).fromNow()}</Card.Text>\r\n                <div className=\"edit-icon\">\r\n                    <Link to={`/editform/${note.id}`}><FaPen onClick={editNoteFunc} /></Link>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","export const addNote = (note) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('notes')\r\n            .add({\r\n                ...note,\r\n                favorite: false,\r\n                createdAt: new Date()\r\n            })\r\n            .then(() => {\r\n                console.log('new note successfully created');\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteNote = (note) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('notes').doc(note.id).delete()\r\n            .then(() => {\r\n                console.log('note successfully deleted');\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const favoriteNote = (note) => {\r\n    const favStatus = !note.favorite;\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('notes').doc(note.id).update({\r\n            favorite: favStatus,\r\n        })\r\n        .then(() => {\r\n            console.log('note successfully add to favorite');\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const editNote = (note) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('notes').doc(note.id).update({\r\n            title: note.title,\r\n            content: note.content\r\n        })\r\n        .then(() => {\r\n            console.log('note successfully add to favorite');\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\n\r\n","import Note from './Note'\r\n\r\n// style\r\nimport '../../styles/notes.scss';\r\n\r\nconst Noteslist = ({ notes }) => {\r\n    return (\r\n        <div className=\"notes-list\">\r\n            <div className=\"note-list\">\r\n            {notes && notes.map(note => <Note note={note} key={note.id}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Noteslist\r\n","import { useState } from 'react'\r\n\r\nconst useInput = (initialValue = '') => {\r\n    const [value, setValue] = useState(initialValue);\r\n    const resetValue = () => {\r\n        setValue(initialValue);\r\n    }\r\n    const bind = {\r\n        value,\r\n        onChange: (e) => {\r\n            setValue(e.target.value);\r\n        }\r\n    }\r\n    return [value, bind, resetValue];\r\n}\r\n\r\nexport default useInput;\r\n\r\n","export default __webpack_public_path__ + \"static/media/post-it.7c831644.png\";","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// component\r\nimport useInput from '../../customhook/useInput';\r\nimport {addNote} from '../../store/action/noteAction';\r\n\r\n// image\r\nimport stickerNotes from '../../images/post-it.png';\r\n\r\n// style\r\nimport '../../styles/form.scss';\r\n\r\nimport { Form, FormGroup, FormControl } from 'react-bootstrap'\r\n\r\n\r\nconst FormSection = () => {\r\n    const dispatch = useDispatch()\r\n    const [title, bindTitle, resetTitle] = useInput('');\r\n    const [content, bindContent, resetContent] = useInput('');\r\n    const [isClicked, setIsClicked] = useState(false);\r\n    const [buttonClassSubmit, setButtonClassSubmit] = useState('button-submit')\r\n\r\n    useEffect(() => {\r\n        console.log(isClicked);\r\n        if(isClicked === false) {\r\n            setButtonClassSubmit('button-submit');\r\n        }\r\n        if(isClicked === true) {\r\n            setButtonClassSubmit('button-submit animate');\r\n        }\r\n        \r\n        const timeout = setTimeout(() => {\r\n            setIsClicked(false);\r\n        }, 700);\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }, [isClicked])\r\n\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addNote({title, content}));\r\n        resetTitle();\r\n        resetContent();\r\n    }\r\n    \r\n    return (\r\n        <div className=\"section\">\r\n            <Form onSubmit={submitHandler}>\r\n                <h5 className=\"card-title\">\r\n                    New note\r\n                    <span><img src={stickerNotes} className=\"stickerNotes\"/></span>\r\n                </h5>\r\n\r\n                <FormGroup controlId=\"exampleForm.ControlInput1\">\r\n                    <FormControl type=\"text\" placeholder=\"Note title\" {...bindTitle}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"exampleForm.ControlTextarea1\">\r\n                    <FormControl as=\"textarea\" rows={3} placeholder=\"Note content\" {...bindContent}/>\r\n                </FormGroup>\r\n\r\n                <button className={buttonClassSubmit} type=\"submit\" onClick={() => setIsClicked(!isClicked)}>add note</button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSection;","export default __webpack_public_path__ + \"static/media/down.80fc0441.png\";","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Noteslist from '../layout/Noteslist';\r\nimport FormSection from './Form';\r\nimport { Row, Col, Form, FormControl, Button } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirestoreConnect } from 'react-redux-firebase'\r\n\r\n// import images\r\nimport downFingerImg from '../../images/down.png'\r\nconst Home = () => {\r\n    useFirestoreConnect([{ collection: 'notes', orderBy: ['createdAt', 'desc'] }]);\r\n    const notes = useSelector((state) => state.firestore.ordered.notes);\r\n    const [text, setText] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [suggestions, setSuggestions] = useState([])\r\n\r\n    const onChangeHandler = (text) => {\r\n        let matches = [];\r\n        if (text.length > 0) {\r\n            matches = notes.filter(note => {\r\n                const regex = new RegExp(text, \"gi\");\r\n                return note.title.match(regex);\r\n            });\r\n        }\r\n        setSuggestions(matches);\r\n        setText(text);\r\n    }\r\n\r\n    const onSuggestHandler = (title, id) => {\r\n        setText(title);\r\n        setId(id);\r\n        setSuggestions([]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col lg={5} className=\"form-field\"><FormSection /></Col>\r\n                <Col lg={7} className=\"notes-field\">\r\n                    <h5>Search the past notes here <img src={downFingerImg} className=\"icon-title\" /></h5>\r\n                    <Form inline>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            value={text}\r\n                            onChange={e => onChangeHandler(e.target.value)}\r\n                            className=\"searchText\" />\r\n                        <Link to={`/note/${id}`} className=\"link-detail ml-auto\"><Button variant=\"outline-danger\" className=\"button-detail\">get detail</Button></Link>\r\n                    </Form>\r\n                    {suggestions && suggestions.map((suggestion, id) =>\r\n                        <div key={id} className=\"suggestion\" onClick={() => onSuggestHandler(suggestion.title, suggestion.id)}>{suggestion.title}</div>\r\n                    )}\r\n\r\n                </Col>\r\n            </Row>\r\n            <section className=\"notes-list\">\r\n                <h5>Notes list</h5>\r\n                <Noteslist notes={notes} />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/star.f89c4762.svg\";","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirestoreConnect } from 'react-redux-firebase';\r\nimport NotesList from './Noteslist'\r\n\r\n// import images\r\nimport star from '../../images/star.svg';\r\n\r\nimport '../../styles/favorite.scss';\r\n\r\nconst Favorite = () => {\r\n    useFirestoreConnect([{collection: 'notes', orderBy: ['createdAt', 'desc'], where: ['favorite', '==', true], storeAs: 'favnotes'}]);\r\n    const favNotes = useSelector(state => state.firestore.ordered.favnotes);\r\n    console.log('favnotes', favNotes);\r\n    return (\r\n        <div className=\"favorite-section\">\r\n            <span className=\"favorite-title\">\r\n                <img src={star} className=\"icon-title\"/>\r\n                <h5>Favorite Notes</h5>\r\n                <img src={star} className=\"icon-title\" />\r\n            </span>\r\n\r\n            <NotesList notes={favNotes} className=\"favorite-list\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorite\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport { useFirestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport * as dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport calendar from 'dayjs/plugin/calendar';\r\n\r\nimport '../../styles/noteDetail.scss';\r\n\r\nconst NoteDetail = (props) => {\r\n    dayjs.extend(relativeTime);\r\n    dayjs.extend(calendar);\r\n    const id = props.match.params.id;\r\n    useFirestoreConnect([{collection: 'notes', doc:id}]);\r\n    const note = useSelector(({firestore: {data}}) => data.notes && data.notes[id]);\r\n    \r\n    const noteDetailMarkup = !isLoaded(note) ? (\r\n        <Card className=\"note-detail\">\r\n            <Card.Body>\r\n                <Card.Text className=\"note-title\">Loading...</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n\r\n            </Card.Footer>\r\n        </Card>\r\n    ) : isEmpty(note) ? (\r\n        <Card className=\"note-detail\">\r\n            <Card.Body>\r\n                <Card.Text className=\"note-title\">Note doesn't exist</Card.Text>\r\n                \r\n            </Card.Body>\r\n            <Card.Footer>\r\n                \r\n            </Card.Footer>\r\n        </Card>\r\n    ) : (\r\n        <Card className=\"note-detail\">\r\n            <Card.Body>\r\n                <Card.Text className=\"note-title\">{note.title}</Card.Text>\r\n                <Card.Text className=\"note-content\">{note.content}</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                {dayjs(note.createdAt.toDate()).calendar()}\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        noteDetailMarkup\r\n    )\r\n}\r\n\r\nexport default NoteDetail\r\n","import {useSelector, useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport useInput from '../../customhook/useInput';\r\n\r\nimport {editNote} from '../../store/action/noteAction';\r\n\r\nimport '../../styles/editform.scss';\r\nimport { Form, FormControl, FormGroup } from 'react-bootstrap';\r\n\r\nconst EditForm = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const note = useSelector(state => state.note);\r\n    const [title, bindTitle, resetTitle] = useInput(note.title);\r\n    const [content, bindContent, resetContent] = useInput(note.content);\r\n\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(editNote({id: note.id, title, content}));\r\n        resetTitle();\r\n        resetContent();\r\n        history.push('/');\r\n    }\r\n    \r\n    return (\r\n        <div className=\"section\">\r\n            <Form onSubmit={submitHandler}>\r\n                <h5 className=\"card-title\">\r\n                    Edit Note\r\n                </h5>\r\n\r\n                <FormGroup controlId=\"exampleForm.ControlInput1\">\r\n                    <FormControl type=\"text\" placeholder=\"Note title\" {...bindTitle}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"exampleForm.ControlTextarea1\">\r\n                    <FormControl as=\"textarea\" rows={3} placeholder=\"Note content\" {...bindContent}/>\r\n                </FormGroup>\r\n\r\n                <button className='button-submit' type=\"submit\">Update Note</button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n","// Import component\nimport NavigationBar from './component/layout/Navbar';\nimport Home from './component/home/Home';\nimport Favorite from './component/layout/Favorite';\nimport NoteDetail from './component/layout/NoteDetail';\nimport EditForm from './component/layout/EditForm';\nimport './styles/app.scss';\n\n// import react lib\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavigationBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/favorite\" component={Favorite} />\n        <Route path=\"/note/:id\" component={NoteDetail} />\n        <Route path=\"/editform/:id\" component={EditForm} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    note_to_edit: {}\r\n}\r\n\r\nexport const noteReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n    case 'EDIT_NOTE':\r\n        return payload;\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { noteReducer } from './noteReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    note: noteReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBkXDw8xo8ejiuix0PKWT6iOQbh18NfO0A\",\r\n  authDomain: \"dear-diary-6bc34.firebaseapp.com\",\r\n  projectId: \"dear-diary-6bc34\",\r\n  storageBucket: \"dear-diary-6bc34.appspot.com\",\r\n  messagingSenderId: \"1015276434426\",\r\n  appId: \"1:1015276434426:web:682f81861020acbecd2a43\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducer/rootReducer';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport firebase from 'firebase/app';\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase\n} from 'react-redux-firebase';\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport fbconfig from './config/firebaseConfig';\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})),\n  reduxFirestore(fbconfig)\n));\n\nconst rrfProps = {\n  firebase,\n  config: fbconfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n};\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}